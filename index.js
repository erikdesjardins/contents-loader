/**
 * @author Erik Desjardins
 * See LICENSE file in root directory for full license.
 */

'use strict';

var fs = require('fs');
var path = require('path');
var loaderUtils = require('loader-utils');

module.exports = function() {};

module.exports.pitch = function(request) {
	if (!request.endsWith('/')) {
		throw new Error(
			'directory-loader: request "' + request + '" must have a trailing slash. ' +
			'Try "' + request + '/" instead.'
		);
	}

	var callback = this.async();

	var options = Object.assign({ match: /\.js$/i }, loaderUtils.getOptions(this));
	var match = typeof options.match === 'string' ? new RegExp(options.match, 'i') : options.match;

	// add context dependency so new files are picked up
	this.addContextDependency(request);

	fs.readdir(this.context, function(err, files) {
		if (err) return callback(err);

		var matchingFiles = files
			.filter(function(filename) {
				return match.test(filename);
			})
			.map(function(filename) {
				return {
					name: filename,
					id: filename.split('.')[0]
				};
			});

		var header = '/* generated by directory-loader */';

		var importStatements = matchingFiles
			.map(function(info) {
				return 'import * as ' + info.id + ' from ' + JSON.stringify('.' + path.join('/', request, info.name)) + ';';
			})
			.join('\n');

		var exportStatement = 'export { ' + matchingFiles
			.map(function(info) {
				return info.id;
			})
			.join(', ') + ' };';

		callback(null, [header, importStatements, exportStatement].join('\n'));
	});

	return '';
};
